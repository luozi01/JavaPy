/* Generated By:JavaCC: Do not edit this line. JavPyConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface JavPyConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int PLUS = 6;
  /** RegularExpression Id. */
  int MINUS = 7;
  /** RegularExpression Id. */
  int MULTI = 8;
  /** RegularExpression Id. */
  int POWER = 9;
  /** RegularExpression Id. */
  int DIVIDE = 10;
  /** RegularExpression Id. */
  int MOD = 11;
  /** RegularExpression Id. */
  int ST = 12;
  /** RegularExpression Id. */
  int STEQ = 13;
  /** RegularExpression Id. */
  int GT = 14;
  /** RegularExpression Id. */
  int GTEQ = 15;
  /** RegularExpression Id. */
  int EQUALITY = 16;
  /** RegularExpression Id. */
  int NOTEQUAL = 17;
  /** RegularExpression Id. */
  int AND = 18;
  /** RegularExpression Id. */
  int OR = 19;
  /** RegularExpression Id. */
  int NOT = 20;
  /** RegularExpression Id. */
  int NULL = 21;
  /** RegularExpression Id. */
  int CONSTANT = 22;
  /** RegularExpression Id. */
  int DIGIT = 23;
  /** RegularExpression Id. */
  int LETTER = 24;
  /** RegularExpression Id. */
  int IDCHARS = 25;
  /** RegularExpression Id. */
  int LPAREN = 26;
  /** RegularExpression Id. */
  int RPAREN = 27;
  /** RegularExpression Id. */
  int LSQPAREN = 28;
  /** RegularExpression Id. */
  int RSQPAREN = 29;
  /** RegularExpression Id. */
  int LBRACE = 30;
  /** RegularExpression Id. */
  int RBRACE = 31;
  /** RegularExpression Id. */
  int COMMA = 32;
  /** RegularExpression Id. */
  int ASSIGN = 33;
  /** RegularExpression Id. */
  int VAR = 34;
  /** RegularExpression Id. */
  int CLASS = 35;
  /** RegularExpression Id. */
  int FUNC = 36;
  /** RegularExpression Id. */
  int IF = 37;
  /** RegularExpression Id. */
  int ELIF = 38;
  /** RegularExpression Id. */
  int ELSE = 39;
  /** RegularExpression Id. */
  int WHILE = 40;
  /** RegularExpression Id. */
  int FOR = 41;
  /** RegularExpression Id. */
  int IN = 42;
  /** RegularExpression Id. */
  int RANGE = 43;
  /** RegularExpression Id. */
  int NEW = 44;
  /** RegularExpression Id. */
  int INTEGER = 45;
  /** RegularExpression Id. */
  int BOOLEAN = 46;
  /** RegularExpression Id. */
  int ADD = 47;
  /** RegularExpression Id. */
  int LENGTH = 48;
  /** RegularExpression Id. */
  int CONTAINS = 49;
  /** RegularExpression Id. */
  int RETURN = 50;
  /** RegularExpression Id. */
  int TRUE = 51;
  /** RegularExpression Id. */
  int FALSE = 52;
  /** RegularExpression Id. */
  int PRINT = 53;
  /** RegularExpression Id. */
  int READ = 54;
  /** RegularExpression Id. */
  int KEYS = 55;
  /** RegularExpression Id. */
  int PUT = 56;
  /** RegularExpression Id. */
  int REMOVEFIRST = 57;
  /** RegularExpression Id. */
  int ISEMPTY = 58;
  /** RegularExpression Id. */
  int INDEXOF = 59;
  /** RegularExpression Id. */
  int GET = 60;
  /** RegularExpression Id. */
  int INSERT = 61;
  /** RegularExpression Id. */
  int DOT = 62;
  /** RegularExpression Id. */
  int COLON = 63;
  /** RegularExpression Id. */
  int ID = 64;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\f\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"**\"",
    "\"/\"",
    "\"%\"",
    "\"<\"",
    "\"<=\"",
    "\">\"",
    "\">=\"",
    "\"==\"",
    "\"!=\"",
    "\"and\"",
    "\"or\"",
    "\"!\"",
    "\"null\"",
    "<CONSTANT>",
    "<DIGIT>",
    "<LETTER>",
    "<IDCHARS>",
    "\"(\"",
    "\")\"",
    "\"[\"",
    "\"]\"",
    "\"{\"",
    "\"}\"",
    "\",\"",
    "\"=\"",
    "\"var\"",
    "\"class\"",
    "\"func\"",
    "\"if\"",
    "\"elif\"",
    "\"else\"",
    "\"while\"",
    "\"for\"",
    "\"in\"",
    "\"range\"",
    "\"new\"",
    "\"int\"",
    "\"boolean\"",
    "\"add\"",
    "\"length\"",
    "\"contains\"",
    "\"return\"",
    "\"true\"",
    "\"false\"",
    "\"print\"",
    "\"read\"",
    "\"keys\"",
    "\"put\"",
    "\"removeFirst\"",
    "\"isEmpty\"",
    "\"indexof\"",
    "\"get\"",
    "\"insert\"",
    "\".\"",
    "\":\"",
    "<ID>",
  };

}
